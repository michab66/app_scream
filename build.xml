<?xml version='1.0' encoding='UTF-8'?>
<!-- $Id: build.xml 610 2012-09-29 14:34:19Z Michael $ -->

<project name="scream" default="dist" basedir=".">

  <property
    description = 
      "Allow properties defined in a file to override the settings here."
    file="build.properties"/>

  <property
    description="Commons home."
    name="common.home"
    value="${basedir}/../dev_common" />

  <property
    description="The startup class for the executable jar." 
    name="mainclass"
    value="de.michab.scream.SchemeInterpreter"/>

  <!-- Apache javaflow has currently no binary distribution.
       Thus we have to create our own jars, see makeJavaFlow.
       The property here defines the base name of the built
       archives: ${javaflow}.jar and {javaflow}-src.jar
       -->
  <property
    description="The base name of javaflow library." 
    name="javaflow"
    value="Javaflow-1.0-SNAPSHOT"/>

  <import file="${common.home}/common_ant.xml"/>

  <taskdef
    classname="JFlex.anttask.JFlexTask"
    name="jflex"
    classpath="${in.lib}/jflex.jar"
    description="The definition of the JFlex task." />

	  <!-- Classpath needed for compilation-->
	  <path id="pt.libs.id">
	      <fileset dir="${in.lib}" id="fs.libs.id">
	        <include name="${dev_common}"/>
	        <include name="commons-logging.jar"/>
	        <include name="asm-all-2.2.1.jar"/>
	        <include name="jakarta-bcel-20050813.jar"/>
	        <include name="commons-jci-r291284.jar"/>
	        <include name="${javaflow}.jar"/>
	      </fileset>
	  </path>

  <taskdef
    classname="org.apache.commons.javaflow.ant.AntRewriteTask"
    name="javaFlow"
    classpath="${in.lib}/${javaflow}.jar"
    description="The definition of the JavaFlow rewrite task.">
    <classpath>
        <path refid="pt.libs.id"/>
    </classpath>
  </taskdef>

  <target name="prepare">
    <tstamp/>
    <mkdir dir="${out.dist}"/>
    <mkdir dir="${out.bin}"/>
    <mkdir dir="${out.web}"/>
  </target>


    <target description="Creates the common lib."
          name="commons" 
          depends="prepare">
        <ant inheritall="false" antfile="${basedir}/../dev_common/build.xml">
            <property name="out.dist" value="${in.lib}"/>
        </ant>
    </target>


    <target name="scanner" depends="commons">
        <jflex
            verbose="true"
            file="${in.src}/de/michab/scream/scanner/Scheme.flex"/>
    </target>


    <target name="compile" depends="scanner">
        <javac
            srcdir="${in.src}"
            destdir="${out.bin}"
        	includes="de/michab/scream/**"
            classpathref="pt.libs.id"/>
    </target>


    <target description="Copies resource files into the build area." 
	          name="resource" 
	          depends="compile">
        <copy todir="${out.bin}">
            <fileset dir="${in.src}"
	                 excludes="doc/**"
	                 includes="**/*.properties,**/*.gif,**/*.png,**/*.s"/>
        </copy>
    </target>


    <!-- Instruments the generated .class files. -->
    <target name="rewrite" depends="resource">
    	<echo message="${out.bin}/org/**"/>
      <javaFlow srcdir="${out.bin}" dstdir="${out.bin}"/>
    </target>


    <!-- Generate the documentation into the build area -->
    <target name="doc" depends="rewrite">
        <javadoc packagenames="de.michab.*"
             sourcepath="${in.src}"
             destdir="${out.web}"
             use="true"
             classpathref="pt.libs.id"/>
    </target>


    <target name="jar" depends="doc">
        <jar
          jarfile="${out.dist}/${ant.project.name}.jar"
          basedir="${out.bin}">

            <manifest>
                <attribute name="Main-Class" value="${mainclass}"/>
                <attribute name="Built-By" value="${user.name}"/>
                <section name="${ant.project.name}">
                    <attribute 
                      name="Implementation-Title" 
                      value="${ant.project.name}"/>
                    <attribute 
                      name="Implementation-Version"
                      value="${javaflow} ${DSTAMP} ${TSTAMP}"/>
                </section>
            </manifest>
        </jar>
    </target>



    <target description="Creates the core executable jar."
              name="dist" depends="jar">

        <common-one-jar
            destfile="${out.dist}/${ant.project.name}-${DSTAMP}.jar">
           <!-- Note that the auto-generated manifest is cool. -->

            <main jar="${out.dist}/${ant.project.name}.jar"/>

            <lib>
                <fileset refid="fs.libs.id"/>
            </lib>
        </common-one-jar>
    </target>



    <target description="Remove all files and directories generated by a build."
          name="clean">
        <delete dir="${out.dist}"/>
        <delete dir="${out.bin}"/>
        <delete dir="${out.web}"/>
      </target>


	<!-- This target is used to create a javaflow jar file.  It is needed since
	     javaflow is only in source code form available from the Apache project
	     page. -->
	<target name="makeJavaFlow">
        <mkdir dir="${out.bin}/javaflow"/>
        <javac
        	debug="on"
            srcdir="internal/${javaflow}/src"
            destdir="${out.bin}/javaflow"
        	includes="org/apache/commons/javaflow/**"
            classpath="${in.lib}/commons-logging.jar;${in.lib}/asm-all-2.2.1.jar;${in.lib}/jakarta-bcel-20050813.jar;${in.lib}/commons-jci-r291284.jar"/>
		<copy todir="${out.bin}/javaflow">
		    <fileset dir="internal/${javaflow}/src"/>
		</copy>
        <jar
          jarfile="${in.lib}/${javaflow}.jar"
          basedir="${out.bin}/javaflow">

            <manifest>
                <attribute name="Built-By" value="${user.name}"/>
                <section name="${ant.project.name}">
                    <attribute 
                      name="Implementation-Title" 
                      value="${ant.project.name}"/>
                    <attribute 
                      name="Implementation-Version"
                      value="${javaflow} ${DSTAMP} ${TSTAMP}"/>
                </section>
            </manifest>
        </jar>
        <delete dir="${out.bin}/javaflow"/>
	</target>


    <target name="eclipseBuilderCallback">
      <jflex
        verbose="true"
        file="${in.src}/de/michab/scream/scanner/Scheme.flex"/>

      <javaFlow srcdir="./bin" dstdir="./bin"/>
    </target>
</project>
